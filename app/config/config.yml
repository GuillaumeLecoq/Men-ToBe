imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        gc_probability: 0
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true
    serializer:
        enabled: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

fos_comment:
    db_driver: orm
    class:
        model:
            comment: FrontOfficeBundle\Entity\Comment
            thread: FrontOfficeBundle\Entity\Thread

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    filters:
        cssrewrite: ~
        yui_js:
            jar: %kernel.root_dir%/Resources/YUICompressor/yuicompressor-2.4.7.jar
        yui_css:
            jar: %kernel.root_dir%/Resources/YUICompressor/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                driver:   pdo_mysql
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
            postgresql:
                driver:   pdo_pgsql
                host:     "%database_host%"
                port:     *******
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        default_entity_manager: default
        entity_managers:
            default:
                connection: default
                #auto_generate_proxy_classes: "%kernel.debug%"
                naming_strategy: doctrine.orm.naming_strategy.underscore
                mappings:
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        alias: GedmoLoggable # (optional) it will default to the name set for the mappingmapping
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    AppBundle: ~
                    UserBundle: ~
                    ApiBundle: ~
                    FOSOAuthServerBundle: ~
            postgresql:
                connection: postgresql
                mappings:
                    AppBundle: ~
                    UserBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: gmail
    username:  *******@gmail.com
    password:  "*******"

# FosUserBundle Configuration
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: UserBundle\Entity\User
    service:
        user_manager: app.custom_user_manager
    registration:
      form:
        type: acme_user_registration
        validation_groups: [my_registration, Default]

# TinyMce Configuration
stfalcon_tinymce:
  language: %locale%

# HWIO Configuration
hwi_oauth:
    http_client:
        verify_peer: false
    firewall_name: main
    fosub:
        username_iterations: 30
        properties:
            # these properties will be used/redefined later in the custom FOSUBUserProvider service.
            facebook: facebookID
            twitter: twitterID
    connect:
        account_connector: app.provider.oauth
    resource_owners:
        facebook:
            type: facebook
            client_id: *******
            client_secret: *******
            scope: "email, public_profile"
            infos_url: "https://graph.facebook.com/me?fields=id,name,email,picture.type(large)"
            paths:
                email: email
            options:
                display: page
        twitter:
            type: twitter
            client_id: *******
            client_secret: *******
            scope: ""
            options:
                include_email: true

# RabbitMq Configuration
old_sound_rabbit_mq:
    connections:
        default:
            host:     'localhost'
            port:     *******
            user:     '*******'
            password: '*******'
            vhost:    '/'
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3
    producers:
        notify_users:
            connection:       default
            exchange_options: {name: 'notify_users', type: direct}
            enable_logger: true
        send_article:
            connection:        default
            exchange_options: {name: 'send_to_mobile', type: direct}
            enable_logger: true
    consumers:
        send_to_mobile:
            connection:       default
            exchange_options: {name: 'send_to_mobile', type: direct}
            queue_options:    {name: 'send_to_mobile'}
            callback:         send_to_mobile_service

# comment
fos_comment:
    acl_roles:
        comment:
            create: ROLE_AUTHOR
            view: IS_AUTHENTICATED_ANONYMOUSLY
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN
        thread:
            create: ROLE_AUTHOR
            view: IS_AUTHENTICATED_ANONYMOUSLY
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN
        vote:
            create: IS_AUTHENTICATED_ANONYMOUSLY
            view: IS_AUTHENTICATED_ANONYMOUSLY
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN

# Api doc
nelmio_api_doc:
    name: 'Mobile API documentation'
    sandbox:
        authentication:             # default is `~` (`null`), if set, the sandbox automatically
                                    # send authenticated requests using the configured `delivery`

            name: Authorization:Bearer     # access token name or query parameter name or header name

            delivery: header 

stof_doctrine_extensions:
    default_locale: fr_FR
    orm:
        default:
            loggable: true

# upload image
vich_uploader:
    db_driver: orm


    mappings:
        user_image:
            uri_prefix:         /images/users
            upload_destination: %kernel.root_dir%/../web/images/users
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
            namer:              vich_uploader.namer_uniqid
        article_image:
            uri_prefix:         /images/articles
            upload_destination: %kernel.root_dir%/../web/images/articles
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
            namer:              vich_uploader.namer_uniqid


fos_oauth_server:
    db_driver: orm
    client_class:        ApiBundle\Entity\Client
    access_token_class:  ApiBundle\Entity\AccessToken
    refresh_token_class: ApiBundle\Entity\RefreshToken
    auth_code_class:     ApiBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider.username
