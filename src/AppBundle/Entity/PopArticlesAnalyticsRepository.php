<?php

namespace AppBundle\Entity;

/**
 * PopArticlesAnalyticsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class PopArticlesAnalyticsRepository extends \Doctrine\ORM\EntityRepository
{
    /** function who returned the popular article */
    public function getPopularArticle($limit = null, $offset = null, $category = null)
    {
        $results = $this->findBy(
            array(),
            array("uniqueViews" => "desc"),
            $limit,
            $offset
        );

        $toReturn = [];
        foreach ($results as $elem)
        {
            if ($category != null && $category != $elem->getCategory())
                continue;
            $toReturn[] = $elem->getArticleId();
        }

        return ($toReturn);
    }

    // function who return the popural month autor
    public function getPopularAuthors($limit = 10, $offset = 0, $category = null, $getUv = null)
    {
        $query = $this->createQueryBuilder('qb')
               ->select('qb.authorId, sum(qb.uniqueViews) as uv')
               ->groupby('qb.authorId')
               ->orderby('uv', 'DESC')
               ->setFirstResult($offset)
               ->setMaxResults($limit);

        if ($category)
            $query->where('qb.category = (:category)')
                ->setParameter('category', $category);

        $queryRes = $query->getQuery()->getResult();
        $res = array();
        foreach ($queryRes as $elem)
            $res[] = $elem['authorId'];
        if ($getUv)
            return $queryRes;
        return $res;
    }
}
